<!-- views/play.js -->
<!DOCTYPE html>
<html>
<head>
  <title>CatOnline</title>
  <link rel="stylesheet" href="/styles/style.css">
  <link rel="SHORTCUT ICON" href="images/favicon.ico" />
  <link rel="icon" href="images/favicon.ico" type="image/ico" />
</head>

<body>

  <%- include( 'header.ejs' ) %>

  <div class="play content">

    <div class="frame" id="control">
      <div class="panel" id="navigation">
        <button onclick="location.href='/lobby';" id="lobby">Go to lobby</button>
        <button onclick="forceSwitchView();" class="switch-view" id="wide">Switch to wide view</button>
      </div>

      <div class="panel" id="info">
        info
      </div>

      <div class="panel" id="messages">
        <div class="messages public">
          <ul class="messages">
            <li class='message admin center'><span>Welcome to CatOnline chat!</span></li>
          </ul>
        </div>
        <div class="messages status">
          currently online: <span class="currently-online">0</span>
        </div>
        <div class="messages input">
          <input class="messages" placeholder="type your message here ...">
        </div>
      </div>
    </div>

    <div class="frame" id="game">
      <svg id="gameboard" xmlns="http://www.w3.org/2000/svg" viewBox="-8 -6.99 16 15.28">
        <defs>
        </defs>

        <% // want to hash users to colors using their `hashcode` (=userid.slice(10)+username)
        for (let i=0; i< svg.tiles.length; i++) { %>
          <g class="tile-group" id="<%= i %>">
            <polygon class="tile-polygon <%= svg.tiles[i].resource %>" id="<%= i %>" points="<%= svg.tiles[i].points %>" conns="<%= svg.tiles[i].conns %>"/>
            <text class="tile-text <%= [6,8].includes(svg.tiles[i].roll) ? 'red' : '' %>" dominant-baseline="middle" alignment-baseline="central" text-anchor="middle" x="<%= svg.tiles[i].x %>" y="<%= svg.tiles[i].y %>">
              <%=svg.tiles[i].roll||''%>
            </text>
          </g>
        <% }
        for (let i=0; i< svg.ports.length; i++) { %>
          <path class="port-path <%= svg.ports[i].type %>" id="<%= i %>" d="<%= svg.ports[i].path %>" juncs="<%= svg.ports[i].juncs %>" />
        <% }
        for (let i=0; i< svg.roads.length; i++) { %>
          <path class="road-path <%= svg.roads[i].owner %>" id="<%= i %>" d="<%= svg.roads[i].path %>" juncs="<%= svg.roads[i].juncs %>" />
        <% }
        for (let i=0; i< svg.spots.length; i++) {
          if (svg.spots[i].isCity) { %>

          <% } else { %>
            <circle class="spot-circle <%= svg.spots[i].owner %>" id="<%= i %>" cx="<%= svg.spots[i].x %>" cy="<%= svg.spots[i].y %>" r="0.2" roads="<%= svg.spots[i].roads %>" hexes="<%= svg.spots[i].hexes %>"/>
          <% }
        } %>

      </svg>
    </div>

  </div>

  <p style="display:none;"><%- JSON.stringify(svg) %></p>
  <p style="display:none;"><%- JSON.stringify(data) %></p>

  <script src='/socket.io/socket.io.js'> </script>
  <script src='http://code.jquery.com/jquery-latest.min.js'> </script>
  <script src='http://ariutta.github.io/svg-pan-zoom/dist/svg-pan-zoom.min.js'> </script>
  <script src="/resources/lib.js"> </script>
  <script>

    // declare functions
    windowResize = function() {
      panzoom.resize();
      panzoom.fit();
      panzoom.center();
    };
    windowResizeWide = function() {
      $('.play.content').css('flex-flow',  'row-reverse nowrap');
      $('.frame#control').css('border-left-width', '2px').css('max-width', '420px');
      $('button.switch-view').prop('id', 'wide').html('Switch to wide view');
      windowResize();
    };
    windowResizeNarr = function() {
      $('.play.content').css('flex-flow',  'column-reverse nowrap');
      $('.frame#control').css('border-left-width', '0px').css('max-width', '4200px');
      $('button.switch-view').prop('id', 'narrow').html('Switch to narrow view');
      windowResize();
    };
    checkForMobile = function() {
      var check = false;
      (function(a){if(/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera);
      return check;
    };
    forceSwitchView = function() {
      let domobj = $('button.switch-view');
      if (domobj.prop('id') === 'wide') {
        console.log('hi');
        maxWidthForNarrView = Math.max( maxWidthForNarrView, $(window).width()*1.11 );
        windowResizeNarr();
      } else if (domobj.prop('id') === 'narrow') {
        minWidthForWideView = Math.min( minWidthForWideView, $(window).width()*0.9 );
        windowResizeWide();
        console.log( 'test');
      }
      console.log( minWidthForWideView, maxWidthForNarrView );
      console.log( domobj.prop('id') );
    };

    // set global variables
    var panzoom,
      socket = io(),
      minWidthForWideView = 1000, // want user to be able to change this later on
      maxWidthForNarrView = 700;

    // once all DOM is rendered
    $(document).ready(function(){

      // set semiglobal objects
      panzoom = svgPanZoom('svg#gameboard');

      $('.tile-group').each( function(i) {
        $(this).click(function() {
          console.log( 'you clicked tile ' + this.id );
        });
      });

      $('.port-path').each( function(i) {
        $(this).click(function() {
          console.log( 'you clicked port ' + this.id );
        });
      });

      $('.road-path').each( function(i) {
        $(this).click(function() {
          console.log( 'you clicked road ' + this.id );
        });
      });

      $('.spot-circle').each( function(i) {
        $(this).click(function() {
          console.log( 'you clicked spot ' + this.id );
        });
      });

      if ($(window).width() < maxWidthForNarrView || checkForMobile()) forceSwitchView();
      window.addEventListener( 'resize', function() {
        if ($(window).width() < minWidthForWideView) { // safari doesn't catch this?
          windowResizeNarr();
        } else if ($(window).width() > maxWidthForNarrView) {
          windowResizeWide();
        }
      });

      windowResize();

    });

  </script>
</body>
</html>
